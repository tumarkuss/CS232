{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww25400\viewh13620\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Task 6:\
\
A: \
Int midpoint_original(int a, int b)\{\
	return (a+b)/2;\
\}\
\
I have tried input 2147483647( 0b 0111111111111\'85.), and negative -2147483647( 0b 1000000000\'85\'85).  This create a bit overflow while calculating and ends up giving the wrong output, instead of 0. Computer flips the negative value and then combines it them which turns every bit into zero then flips it back and ads one. This makes -2147483647 + 1. The final answer, when the answer should be 0.\
\
\
B:\
Int midpoint_B(int a, int b)\{\
	return((unsigned int)a + (unsigned int)b >>1;\
\}\
 \
\
When a and b are negative  :\
return((unsigned int)a + (unsigned int)b is < 0. \
\
However the function returns a positive number. Because both int a, b are unsigned and the sign is neglected. Which means they can\'92t be negative. And this messes up with the negative input\'92s equation.\
\
\
\
\
\
C: \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 Int midpoint_C(int a, int b)\{\
	return(( a & b) + (a ^ b)) >>1;\
\}\
\
 (a & b): Bitwise And operand. Mathematically speaking \'93Overlap\'94\
\
(a ^ b): Bitwise XOR operand. Mathematically speaking \'93Difference\'94\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
One of the errors that could happen is if :\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 (( a & b) + (a ^ b))< 0.    Then  >> 1 bitwise operand ,turns negative number into positive by pushing its leftmost bit to the right and making the whole number positive. This will cause a wrong answer.}